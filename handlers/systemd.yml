---

- name: reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: reload systemd conf
  ansible.builtin.systemd:
    name: "{{ my_service }}"
    state: "{{ my_restart_or_reload }}"
    daemon_reload: true
  loop: "{{ lp_systemd_conf_changes.results }}"
  loop_control:
    label: "{{ my_service }}"
  vars:
    my_service: "{{ item.item.0.value.reload_service }}"
    my_state: "{{ my_services[my_service].state|default('started') }}"
    my_restart_or_reload: "{{ my_services[my_service].restart_or_reload|default('reloaded') }}"
  when:
    - my_service != 'noop'
    - item.changed|bool
    - my_state == 'started'

- name: reload systemd units
  ansible.builtin.systemd:
    name: "{{ my_service }}"
    state: "{{ my_restart_or_reload }}"
    daemon_reload: true
  loop: "{{ lp_systemd_unit_create_changes.results }}"
  loop_control:
    label: "{{ my_service }}"
  vars:
    my_service: "{{ item.dest|basename }}"
    my_state: "{{ my_services[my_service].state|default('started') }}"
    my_restart_or_reload: "{{ my_services[my_service].restart_or_reload|default('reloaded') }}"
  when:
    - not (my_service|regex_search('^(.*)@\.\w+$'))
    - item.changed|bool
    - my_state == 'started'

# EOF
...

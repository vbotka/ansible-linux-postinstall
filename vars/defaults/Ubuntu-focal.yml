---
# Ubuntu 20.04 Focal vars linux-postinstall

# lp_ssh: True
# lp_ssh_config:
#  - host: "*"
#    conf:
#      - { key: "SendEnv", val: "LANG LC_*" }
#      - { key: "HashKnownHosts", val: "yes" }
#      - { key: "GSSAPIAuthentication", val: "yes" }

lp_speechd_service: speech-dispatcher

lp_autofs_service: autofs
lp_timesyncd_service: systemd-timesyncd.service
lp_postfix_service: postfix
lp_gpsd_service: gpsd
lp_bluetooth_service: bluetooth
lp_auto_upgrades_service: unattended-upgrades

lp_udev_service: udev
lp_udev_path: /usr/bin/udevadm

lp_sshd_service: ssh
lp_sshd_path: /usr/sbin/sshd

lp_modules_conf: /etc/modules

lp_hosts_default:
  - {ip: "127.0.0.1", name1: "localhost"}
  - {ip: "::1", name1: "ip6-localhost", name2: "ip6-loopback"}
  - {ip: "fe00::0", name1: "ip6-localnet"}
  - {ip: "ff00::0", name1: "ip6-mcastprefix"}
  - {ip: "ff02::1", name1: "ip6-allnodes"}
  - {ip: "ff02::2", name1: "ip6-allrouters"}

lp_nfsd_packages:
  - nfs-kernel-server
lp_nfsd_services:
  - nfs-kernel-server
lp_nfsd_reload_service: nfs-kernel-server

lp_gpg_packages:
  - gnupg
  - gpg
  - gpg-agent

lp_wpagui_packages:
  - wpasupplicant
  - wpagui
  - net-tools
  - ifupdown
  - wireless-tools

lp_nm_packages:
  - network-manager
lp_nm_services:
  - NetworkManager.service
  - NetworkManager-wait-online.service
  - NetworkManager-dispatcher.service
  - network-manager.service
  - wpa_supplicant.service
lp_nm_services_mask:
  - NetworkManager.service
lp_nm_conf_path: /etc/NetworkManager/NetworkManager.conf

lp_wpasupplicant_packages:
  - wpasupplicant
lp_wpasupplicant_conf_ctrl_interface: /run/wpa_supplicant
# lp_wpasupplicant_conf_ctrl_interface: /var/run/wpa_supplicant
# lp_wpa_action_script_dhclient: "{{ lp_dhclient }}"

lp_logrotate_packages:
  - logrotate

lp_gpsd_packages:
  - gpsd
  - gpsd-clients

lp_latex_packages:
  - texlive-full

lp_smart_packages:
  - smartmontools

lp_kvm_packages:
  - qemu
  - qemu-kvm
  - libvirt-daemon
  - libvirt-daemon-system
  - libvirt-clients
  - bridge-utils
# - ubuntu-vm-builder

lp_xen_version: "4.11"
lp_xen_packages:
  - "xen-hypervisor-4.11-amd64"
  - "xen-utils-4.11"
  - "xen-utils-common"
  - "xenstore-utils"
# - "xen-hypervisor-{{ lp_xen_version }}-amd64"
# - "xen-utils-{{ lp_xen_version }}"
# - ubuntu-virt-server

lp_tlp_packages:
  - tlp
  - tlp-rdw
lp_tlp_packages_tp:
  - tp-smapi-dkms
# - acpi-call-dkms
# Error: acpi_call: module verification failed: signature and/or
# required key missing - tainting kernel
lp_tlp_services:
  - tlp
lp_tlp_restart_service: tlp
lp_tlp_config_file: /etc/tlp.conf
lp_tlp_path: /usr/sbin/tlp

lp_virtualbox_repos:
  - "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian/focal contrib"
# - "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian/
#                     {{ ansible_lsb.codename }} contrib"
lp_virtualbox_services:
  - vboxautostart-service
  - vboxballoonctrl-service
  - vboxdrv.service
  - vboxweb-service

# TODO: Not tested in 20.04 yet
lp_libvirt_libvirtd_service: libvirtd
lp_libvirt_guests_service: libvirt-guests
lp_libvirt_packages:
  - libvirt0
  - libvirt-daemon
  - libvirt-daemon-driver-storage-rbd
  - libvirt-daemon-system
  - libvirt-clients
  - virtinst
lp_libvirt_conf_owner: root
lp_libvirt_conf_group: root
lp_libvirt_conf_mode: "0644"
lp_libvirt_conf_dir: /etc/libvirt

lp_zfs_packages:
  - zfsutils-linux

lp_ufw_packages:
  - ufw

lp_systemd_owner: root
lp_systemd_group: root
lp_systemd_mode: "0644"

lp_networkd_service: systemd-networkd.service
lp_networkd_packages: []

lp_netplan_default: 01-network-manager-all.yaml
lp_netplan_mode: "0644"

# Note 1.
# Netplan in 18.04 does not support wpa_supplicant.conf
# https://bugs.launchpad.net/netplan/+bug/1735288
# status: New â†’ Triaged/Wishlist

lp_apparmor_packages:
  - apparmor
  - apparmor-utils
  - snapd
  - jq
lp_apparmor_profile_dir: /etc/apparmor.d

lp_debsums_packages:
  - debsums

lp_resolvconf_service: resolvconf
lp_resolvconf_packages:
  - resolvconf
lp_resolvconf_confd_head_path: /etc/resolvconf/resolv.conf.d/head
lp_resolvconf_conf_owner: root
lp_resolvconf_conf_group: root
lp_resolvconf_conf_mode: "0644"

# userland paths
# lp_dhclient: /sbin/dhclient

lp_passwordstore_packages:
  - pass

lp_dnsmasq_packages:
  - dnsmasq

# EOF
...

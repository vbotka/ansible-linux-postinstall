---
# linux_postinstall function service-service

- name: "Service: Manual management of services"
  ansible.builtin.service:
    name: "{{ item.name }}"
    arguments: "{{ item.arguments | d(omit) }}"
    enabled: "{{ item.enabled | d(omit) }}"
    pattern: "{{ item.pattern | d(omit) }}"
    runlevel: "{{ item.runlevel | d(omit) }}"
    sleep: "{{ item.sleep | d(omit) }}"
    state: "{{ item.state | d(omit) }}"
    use: "{{ item.use | d(omit) }}"
  loop: "{{ lp_service }}"
  loop_control:
    label: >-
      {{ item.name }}
      enabled={{ item.enabled | d('UNDEFINED') }}
      state={{ item.state | d('UNDEFINED') }}
      use={{ item.use | d('UNDEFINED') }}
  register: result
  notify: reload {{ ansible_service_mgr }} daemon

- name: "Service: Debug Manual management full results lp_service_debug2={{ lp_service_debug2 }}"
  when: lp_service_debug2 | d(false) | bool
  ansible.builtin.debug:
    var: result

- name: "Service: Debug Manual management results lp_service_debug2={{ lp_service_debug2 }}"
  when: lp_service_debug2 | d(false) | bool
  ansible.builtin.debug:
    msg: |
      {% for i in result.results %}
      # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      changed: {{ i.changed }}
      name: {{ i.name | d('UNDEFINED') }}
      enabled: {{ i.enabled | d('UNDEFINED') }}
      state: {{ i.state | d('UNDEFINED') }}
      msg: {{ i.msg | d('UNDEFINED') }}

      invocation:
        {{ i.invocation.module_args | to_nice_yaml(indent=2) | indent(2) }}
      item:
        {{ i.item | to_nice_yaml(indent=2) | indent(2) }}
      {% endfor %}

# EOF

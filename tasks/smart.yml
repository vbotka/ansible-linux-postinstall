---
# linux_postinstall smart

- name: "Smart: Debug"
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_smart_install: {{ lp_smart_install }}
      lp_smart_packages:
        {{ lp_smart_packages | to_nice_yaml(indent=2) | indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_smart_debug|bool
  tags: lp_smart_debug

- name: "Smart: Install packages"
  ansible.builtin.import_role:
    name: vbotka.linux_lib
    tasks_from: install_package.yml
  when: lp_smart_install|bool
  vars:
    ll_ipkg_list: "{{ lp_smart_packages }}"
    ll_ipkg_state: "{{ lp_package_state }}"
    ll_ipkg_autoremove: "{{ lp_packages_autoremove | bool }}"
    ll_ipkg_rescue_end_host: "{{ lp_packages_rescue_end_host | bool }}"
    ll_debug: "{{ lp_smart_debug | bool }}"
  tags: lp_smart_packages

- name: "Smart: Configure {{ lp_smart_conf_file }}. Do not scan for devices"
  ansible.builtin.lineinfile:
    state: absent
    dest: "{{ lp_smart_conf_file }}"
    regexp: ^\s*DEVICESCAN\s*(.*)$
    owner: "{{ lp_smart_conf_owner }}"
    group: "{{ lp_smart_conf_group }}"
    mode: "{{ lp_smart_conf_mode }}"
    backup: "{{ lp_backup_conf }}"
    create: true
  when: not lp_smart_devicescan|bool
  notify: reload smart
  tags: lp_smart_conf

- name: "Smart: Configure devices in {{ lp_smart_conf_file }}"
  ansible.builtin.lineinfile:
    dest: "{{ lp_smart_conf_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    owner: "{{ lp_smart_conf_owner }}"
    group: "{{ lp_smart_conf_group }}"
    mode: "{{ lp_smart_conf_mode }}"
    backup: "{{ lp_backup_conf }}"
    create: true
  loop: "{{ lp_smart_devices }}"
  loop_control:
    label: "{{ item.line }}"
  notify: reload smart
  tags: lp_smart_conf

- name: "Smart: Service {{ state }} and {{ enable }}"
  ansible.builtin.service:
    name: "{{ lp_smart_service }}"
    state: "{{ state }}"
    enabled: "{{ enabled }}"
  register: result
  vars:
    enabled: "{{ lp_smart_enable | bool | d(false) }}"
    state: "{{ lp_smart_state | d(default_state) }}"
    default_state: "{{ enabled | ternary('started', 'stopped') }}"
    enable: "{{ enabled | ternary('enabled', 'disabled') }}"
  tags: lp_smart_service

- name: "Smart: Debug service"
  ansible.builtin.debug:
    var: result
  when: lp_smart_debug|bool
  tags: lp_smart_service

# EOF

---
# linux_postinstall udev

- name: "Udev: Debug lp_udev_debug={{ lp_udev_debug }}"
  when: lp_udev_debug | bool
  tags: lp_udev_debug
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      ansible_distribution: {{ ansible_distribution }}
      ansible_distribution_version: {{ ansible_distribution_version }}
      ansible_distribution_release: {{ ansible_distribution_release }}

      lp_backup_conf: {{ lp_backup_conf }}

      lp_udev_debug2: {{ lp_udev_debug2 | bool }}
      lp_udev_enable: {{ lp_udev_enable }}
      lp_udev_module: {{ lp_udev_module }}
      lp_udev_service: {{ lp_udev_service }}
      lp_udev_path: {{ lp_udev_path }}
      lp_udev_conf_file: {{ lp_udev_conf_file }}
      lp_udev_conf:
        {{ lp_udev_conf | to_yaml(indent=2) | indent(2) }}
      lp_udev_rules_dir: {{ lp_udev_rules_dir }}
      lp_udev_rules_template: {{ lp_udev_rules_template }}
      lp_udev_rules:
        {{ lp_udev_rules | to_yaml(indent=2) | indent(2) }}
      >>> Deprecated - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
      lp_udev_persistent_net_template: {{ lp_udev_persistent_net_template }}
      lp_udev_persistent_net_rules_file: {{ lp_udev_persistent_net_rules_file }}
      lp_udev_persistent_net_rules:
        {{ lp_udev_persistent_net_rules | to_nice_yaml(indent=2) | indent(2) }}
      lp_udev_hci_name_rules_file: {{ lp_udev_hci_name_rules_file }}
      lp_udev_hci_name_rules:
        {{ lp_udev_hci_name_rules | to_nice_yaml(indent=2) | indent(2) }}
      lp_udev_hci_run_rules_file: {{ lp_udev_hci_run_rules_file }}
      lp_udev_hci_run_rules:
        {{ lp_udev_hci_run_rules | to_nice_yaml(indent=2) | indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: "Udev: Configure {{ lp_udev_conf_file }}"
  tags: lp_udev_conf
  notify: update initrd
  ansible.builtin.lineinfile:
    dest: "{{ lp_udev_conf_file }}"
    regexp: ^\s*{{ item.key }}\s*=(.*)$
    line: "{{ item.key }}={{ item.val }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_conf }}"

- name: "Udev: Configure {{ lp_udev_rules_dir }}"
  tags: lp_udev_rules
  notify: reload udev
  ansible.builtin.template:
    src: "{{ lp_udev_rules_template }}"
    dest: "{{ lp_udev_rules_dir }}/{{ item.key }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_rules | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

  # > > > Deprecated, use lp_udev_rules instead - - - - - - - - - - - - - - - - - -

- name: Configure legacy templates
  notify: reload udev
  block:

    - name: "Udev: Configure {{ lp_udev_rules_dir ~ '/' ~ lp_udev_persistent_net_rules_file }}"
      tags: lp_udev_persistentnet
      ansible.builtin.template:
        src: "{{ lp_udev_persistent_net_template }}"
        dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_persistent_net_rules_file }}"
        owner: root
        group: root
        mode: "0644"
        backup: "{{ lp_backup_conf }}"
      loop: "{{ lp_udev_persistent_net_rules }}"

    - name: "Udev: Configure {{ lp_udev_rules_dir ~ '/' ~ lp_udev_hci_name_rules_file }}"
      tags: lp_udev_hciname
      ansible.builtin.template:
        src: hci-name.rules.j2
        dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_hci_name_rules_file }}"
        owner: root
        group: root
        mode: "0644"
        backup: "{{ lp_backup_conf }}"
      loop: "{{ lp_udev_hci_name_rules }}"

    - name: "Udev: Configure {{ lp_udev_rules_dir ~ '/' ~ lp_udev_hci_run_rules_file }}"
      tags: lp_udev_hcirun
      ansible.builtin.template:
        src: hci-run.rules.j2
        dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_hci_run_rules_file }}"
        owner: root
        group: root
        mode: "0644"
        backup: "{{ lp_backup_conf }}"
      loop: "{{ lp_udev_hci_run_rules }}"

  # - - - - - - - - - - - - - - - - - - Deprecated, use lp_udev_rules instead < < <

- name: Debug ansible_facts.services
  when: lp_udev_debug2 | bool
  block:

    - name: "Udev: Get ansible_facts.services"
      ansible.builtin.service_facts:

    - name: "Udev: Debug ansible_facts.services *udev* lp_udev_debug2={{ lp_udev_debug2 }}"
      ansible.builtin.debug:
        var: udev_service
      vars:
        udev_service: "{{ ansible_facts.services | dict2items | selectattr('key', 'search', 'udev') | items2dict }}"

# The module ansible.builtin.service is not idempotent when the
# parameter enabled is True for udev.service. udev.service is alias to
# systemd-udevd.service. systemd-udevd.service is static (see man
# systemctl; unit file command is-enabled).
# See: systemd and service modules don't check is-enabled stdout values
# https://github.com/ansible/ansible/issues/28247

- name: Start and enable udev
  when: lp_udev_enable | bool
  tags: lp_udev_service
  block:

    - name: "Udev: Start and enable udev (service)"
      when: lp_udev_module == 'service'
      register: result_service
      ansible.builtin.service:
        name: "{{ lp_udev_service }}"
        state: started

    - name: "Udev: Start and enable udev (systemd)"
      when: lp_udev_module == 'systemd'
      register: result_systemd
      ansible.builtin.systemd_service:
        name: "{{ lp_udev_service }}"
        state: started

    - name: "Udev: Start and enable udev (sysvinit)"
      when: lp_udev_module == 'sysvinit'
      register: result_sysvinit
      ansible.builtin.sysvinit:
        name: "{{ lp_udev_service }}"
        state: started
        enabled: true

    - name: "Udev: Debug result lp_udev_debug2={{ lp_udev_debug2 }}"
      when: lp_udev_debug2 | bool
      ansible.builtin.debug:
        msg: "{{ lookup('vars', 'result_' ~ lp_udev_module) }}"

- name: Stop and disable udev
  when: not lp_udev_enable | bool
  tags: lp_udev_service
  block:

    - name: "Udev: Stop and disable udev"
      ansible.builtin.service:
        name: "{{ lp_udev_service }}"
        state: stopped
        enabled: false
      register: result

    - name: "Udev: Debug result lp_udev_debug2={{ lp_udev_debug2 }}"
      ansible.builtin.debug:
        var: result
      when: lp_udev_debug2 | bool

# EOF

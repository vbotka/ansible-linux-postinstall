---
# linux_postinstall udev

- name: "udev: Debug"
  vars:
    msg: |-
      lp_udev_enable: {{ lp_udev_enable }}
      lp_udev_conf_file: {{ lp_udev_conf_file }}
      lp_udev_conf:
        {{ lp_udev_conf|to_yaml|indent(2) }}
      lp_udev_rules_dir: {{ lp_udev_rules_dir }}
      lp_udev_rules_template: {{ lp_udev_rules_template }}
      lp_udev_rules:
        {{ lp_udev_rules|to_yaml|indent(2) }}
      lp_udev_persistent_net_template: {{ lp_udev_persistent_net_template }}
      lp_udev_persistent_net_rules_file: {{ lp_udev_persistent_net_rules_file }}
      lp_udev_persistent_net_rules:
        {{ lp_udev_persistent_net_rules|to_nice_yaml|indent(2) }}
      lp_udev_hci_name_rules_file: {{ lp_udev_hci_name_rules_file }}
      lp_udev_hci_name_rules:
        {{ lp_udev_hci_name_rules|to_nice_yaml|indent(2) }}
      lp_udev_hci_run_rules_file: {{ lp_udev_hci_run_rules_file }}
      lp_udev_hci_run_rules:
        {{ lp_udev_hci_run_rules|to_nice_yaml|indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_udev_debug|bool
  tags: lp_udev_debug

- name: "udev: Configure {{ lp_udev_conf_file }}"
  ansible.builtin.lineinfile:
    dest: "{{ lp_udev_conf_file }}"
    regexp: '^\s*{{ item.key }}\s*=(.*)$'
    line: "{{ item.key }}={{ item.val }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_conf }}"
  notify: update initrd

- name: "udev: Configure {{ lp_udev_rules_dir }}"
  ansible.builtin.template:
    src: "{{ lp_udev_rules_template }}"
    dest: "{{ lp_udev_rules_dir }}/{{ item.key }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_rules|dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  notify: reload udev
  tags: lp_udev_rules

# > > > Deprecated, use lp_udev_rules instead - - - - - - - - - - - - - - - - - -
- name: "udev: Configure {{ lp_udev_rules_dir }}/
                         {{ lp_udev_persistent_net_rules_file }}"
  ansible.builtin.template:
    src: "{{ lp_udev_persistent_net_template }}"
    dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_persistent_net_rules_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_persistent_net_rules }}"
  notify: reload udev
  tags: lp_udev_persistentnet
- name: "udev: Configure {{ lp_udev_rules_dir }}/
                         {{ lp_udev_hci_name_rules_file }}"
  ansible.builtin.template:
    src: hci-name.rules.j2
    dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_hci_name_rules_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_hci_name_rules }}"
  notify: reload udev
  tags: lp_udev_hciname
- name: "udev: Configure {{ lp_udev_rules_dir }}/
                         {{ lp_udev_hci_run_rules_file }}"
  ansible.builtin.template:
    src: hci-run.rules.j2
    dest: "{{ lp_udev_rules_dir }}/{{ lp_udev_hci_run_rules_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_udev_hci_run_rules }}"
  notify: reload udev
  tags: lp_udev_hcirun
# - - - - - - - - - - - - - - - - - - Deprecated, use lp_udev_rules instead < < <

# Service
- name: "udev: Start and enable udev"
  ansible.builtin.service:
    name: "{{ lp_udev_service }}"
    state: started
    enabled: true
  when: lp_udev_enable|bool
  tags: lp_udev_service

- name: "udev: Stop and disable udev"
  ansible.builtin.service:
    name: "{{ lp_udev_service }}"
    state: stopped
    enabled: false
  when: not lp_udev_enable|bool
  tags: lp_udev_service

# EOF
...

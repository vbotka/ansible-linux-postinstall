---
# linux_postinstall repos

- name: "repos: Debug"
  vars:
    msg: |-
      lp_repos_keys:
        {{ lp_repos_keys|to_nice_yaml|indent(2) }}
      lp_repos:
        {{ lp_repos|to_nice_yaml|indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_repos_debug|bool
  tags: lp_repos_debug

- name: "repos: Manage repo signing keys"
  ansible.builtin.apt_key:
    data: "{{ item.data|default(omit) }}"
    file: "{{ item.file|default(omit) }}"
    id: "{{ item.id|default(omit) }}"
    keyring: "{{ item.keyring|default(omit) }}"
    keyserver: "{{ item.keyserver|default(omit) }}"
    state: "{{ item.state|default(omit) }}"
    url: "{{ item.url|default(omit) }}"
    validate_certs: "{{ item.validate_certs|default(omit) }}"
  loop: "{{ lp_repos_keys }}"
  register: result
  retries: "{{ lp_install_retries }}"
  until: result is succeeded
  delay: "{{ lp_install_delay }}"
  tags: lp_repos_keys_manage

- name: "repos: Manage repositories"
  ansible.builtin.apt_repository:
    codename: "{{ item.codename|default(omit) }}"
    filename: "{{ item.filename|default(omit) }}"
    mode: "{{ item.mode|default(omit) }}"
    repo: "{{ item.repo|mandatory }}"
    state: "{{ item.state|default(omit) }}"
    update_cache: "{{ item.update_cache|default(omit) }}"
    validate_certs: "{{ item.validate_certs|default(omit) }}"
  loop: "{{ lp_repos }}"
  tags: lp_repos_manage

# EOF
...

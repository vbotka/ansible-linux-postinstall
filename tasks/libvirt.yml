---
# linux_postinstall libvirt

- name: "libvirt Debug"
  vars:
    msg: |-
      lp_libvirt_guests_enable [{{ lp_libvirt_guests_enable }}]
      lp_libvirt_libvirtd_enable [{{ lp_libvirt_libvirtd_enable }}]
      lp_libvirt_conf_owner [{{ lp_libvirt_conf_owner }}]
      lp_libvirt_conf_group [{{ lp_libvirt_conf_group }}]
      lp_libvirt_conf_mode [{{ lp_libvirt_conf_mode }}]
      lp_libvirt_conf_dir [{{ lp_libvirt_conf_dir }}]
      lp_libvirt_packages
      {{ lp_libvirt_packages|to_nice_yaml }}
      lp_libvirt_conf
      {{ lp_libvirt_conf|to_yaml }}
  ansible.builtin.debug:
    msg: "{{ msg.split('\n') }}"
  when: lp_libvirt_debug|bool
  tags: lp_libvirt_debug

- name: "libvirt: Install packages"
  ansible.builtin.include_tasks: fn/install-package.yml
  loop: "{{ lp_libvirt_packages }}"
  tags: lp_libvirt_pkg

- name: "libvirt: Configure"
  ansible.builtin.include_tasks: libvirt_conf.yml
  loop: "{{ lp_libvirt_conf|dict2items }}"
  tags: lp_libvirt_conf

- name: "libvirt: Start and enable {{ lp_libvirt_libvirtd_service }}"
  ansible.builtin.service:
    name: "{{ lp_libvirt_libvirtd_service }}"
    state: started
    enabled: true
  when: lp_libvirt_libvirtd_enable|bool
  tags: lp_libvirt_libvirtd_service

- name: "libvirt: Stop and disable {{ lp_libvirt_libvirtd_service }}"
  ansible.builtin.service:
    name: "{{ lp_libvirt_libvirtd_service }}"
    state: stopped
    enabled: false
  when: not lp_libvirt_libvirtd_enable|bool
  tags: lp_libvirt_libvirtd_service

- name: "libvirt: Start and enable {{ lp_libvirt_guests_service }}"
  ansible.builtin.service:
    name: "{{ lp_libvirt_guests_service }}"
    state: started
    enabled: true
  when: lp_libvirt_guests_enable|bool
  tags: lp_libvirt_guests_service

- name: "libvirt: Stop and disable {{ lp_libvirt_guests_service }}"
  ansible.builtin.service:
    name: "{{ lp_libvirt_guests_service }}"
    state: stopped
    enabled: false
  when: not lp_libvirt_guests_enable|bool
  tags: lp_libvirt_guests_service

# EOF
...

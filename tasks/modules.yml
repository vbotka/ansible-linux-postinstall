---
# linux_postinstall modules

- name: "modules: Debug"
  vars:
    msg: |-
      lp_modules_conf: {{ lp_modules_conf }}
      lp_modules:
        {{ lp_modules|to_yaml|indent(2) }}
      lp_modules_options_path:  {{ lp_modules_options_path }}
      lp_modules_options:
        {{ lp_modules_options|to_nice_yaml|indent(2) }}
      lp_modules_blacklist_path: {{ lp_modules_blacklist_path }}
      lp_modules_blacklist:
        {{ lp_modules_blacklist|to_nice_yaml|indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_modules_debug|bool
  tags: lp_modules_debug

- name: "modules: modprobe modules"
  community.general.modprobe:
    name: "{{ item.name }}"
    params: "{{ item.params }}"
    state: "{{ item.state|default('present') }}"
  loop: "{{ lp_modules }}"

# Debian
- name: "modules: Configure {{ lp_modules_conf }} in Debian"
  ansible.builtin.lineinfile:
    dest: "{{ lp_modules_conf }}"
    regexp: '^\s*{{ item.name }}\s*(.*)$'
    line: "{{ item.name }} {{ item.params }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_modules }}"
  when:
    - ansible_os_family == "Debian"
    - item.state|default("present") == "present"

# RedHat
- name: "modules: Configure {{ lp_modules_conf }} in RedHat"
  ansible.builtin.lineinfile:
    dest: "{{ lp_modules_conf }}"
    regexp: '^\s*modprobe\s+{{ item.name }}\s*(.*)$'
    line: "modprobe {{ item.name }} {{ item.params }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_modules }}"
  when:
    - ansible_os_family == "RedHat"
    - item.state|default("present") == "present"

- name: "modules: Blacklist modules in {{ lp_modules_blacklist_path }}"
  ansible.builtin.template:
    src: blacklist-module.j2
    dest: "{{ lp_modules_blacklist_path }}/blacklist-{{ item }}.conf"
    backup: "{{ lp_backup_conf }}"
    mode: "0644"
  loop: "{{ lp_modules_blacklist }}"
  notify: update initramfs

- name: "modules: Set modules options in {{ lp_modules_options_path }}"
  ansible.builtin.template:
    src: options-module.j2
    dest: "{{ lp_modules_options_path }}/{{ item.module }}.conf"
    backup: "{{ lp_backup_conf }}"
    mode: "0644"
  loop: "{{ lp_modules_options }}"
  notify: update initramfs

# EOF
...

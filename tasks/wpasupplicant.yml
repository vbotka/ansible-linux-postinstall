---
# linux-postinstall wpasupplicant

- name: "wpasupplicant: Debug"
  vars:
    msg: |
      lp_package_state [{{ lp_package_state }}]
      lp_wpasupplicant_install [{{ lp_wpasupplicant_install }}]
      lp_wpasupplicant_packages
      {{ lp_wpasupplicant_packages|to_nice_yaml }}
      lp_wpasupplicant_conf_only [{{ lp_wpasupplicant_conf_only }}]
      lp_wpasupplicant_conf_dir [{{ lp_wpasupplicant_conf_dir }}]
      lp_wpasupplicant_conf_owner [{{ lp_wpasupplicant_conf_owner }}]
      lp_wpasupplicant_conf_group [{{ lp_wpasupplicant_conf_group }}]
      lp_wpasupplicant_conf_mode [{{ lp_wpasupplicant_conf_mode }}]
      lp_wpasupplicant_conf_ctrl_interface [{{ lp_wpasupplicant_conf_ctrl_interface }}]
      lp_wpasupplicant_conf_global
      {{ lp_wpasupplicant_conf_global|to_yaml }}
      lp_wpa_action_script [{{ lp_wpa_action_script }}]
      lp_wpa_action_script_dir [{{ lp_wpa_action_script_dir }}]
      lp_wpa_action_script_file [{{ lp_wpa_action_script_file }}]
      lp_wpa_action_script_owner [{{ lp_wpa_action_script_owner }}]
      lp_wpa_action_script_group [{{ lp_wpa_action_script_group }}]
      lp_wpa_action_script_mode [{{ lp_wpa_action_script_mode }}]
      lp_wpa_action_script_dhclient [{{ lp_wpa_action_script_dhclient }}]
      lp_wpa_action_script_pidfile [{{ lp_wpa_action_script_pidfile }}]
      lp_wpa_action_script_options_connect [{{ lp_wpa_action_script_options_connect }}]
      lp_wpa_action_script_options_disconnect [{{ lp_wpa_action_script_options_disconnect }}]
      lp_wpa_action_script_logfile [{{ lp_wpa_action_script_logfile }}]

      {% if lp_wpasupplicant_debug_classified|bool %}
      lp_wpasupplicant_conf
      {{ lp_wpasupplicant_conf|to_yaml }}
      {% endif %}
  debug:
    msg: "{{ msg.split('\n')[:-1] }}"
  when: lp_wpasupplicant_debug|bool
  tags: lp_wpasupplicant_debug

# Packages
- name: "wpasupplicant: Install packages"
  include_tasks: fn/install-package.yml
  loop: "{{ lp_wpasupplicant_packages }}"
  when: lp_wpasupplicant_install|bool
  tags: lp_wpasupplicant_packages

# Action script for wpa_cli
- name: "wpasupplicant: Create dir {{ lp_wpa_action_script_dir }}"
  file:
    state: directory
    path: "{{ lp_wpa_action_script_dir }}"
    owner: "{{ lp_wpa_action_script_owner }}"
    group: "{{ lp_wpa_action_script_group }}"
  when: lp_wpa_action_script|bool
  tags: lp_wpa_action_script_dir

- name: "wpasupplicant: Create script {{ lp_wpa_action_script_file }}"
  template:
    src: wpa_action.sh.j2
    dest: "{{ lp_wpa_action_script_file }}"
    owner: "{{ lp_wpa_action_script_owner }}"
    group: "{{ lp_wpa_action_script_group }}"
    mode: "{{ lp_wpa_action_script_mode }}"
    backup: "{{ lp_backup_conf }}"
  when: lp_wpa_action_script|bool
  tags: lp_wpa_action_script

# Conf
- name: "wpasupplicant: Create wpasupplicant configuration file"
  template:
    src: wpa_supplicant.conf.j2
    dest: "{{ lp_wpasupplicant_conf_dir }}/{{ my_filename }}"
    owner: "{{ lp_wpasupplicant_conf_owner }}"
    group: "{{ lp_wpasupplicant_conf_group }}"
    mode: "{{ lp_wpasupplicant_conf_mode }}"
    backup: "{{ lp_backup_conf }}"
  register: lp_wpasupplicant_conf_changes
  notify: reconfigure wpa_supplicant
  loop: "{{ lp_wpasupplicant_conf }}"
  loop_control:
    label: "{{ my_filename }}"
  no_log: "{{ not lp_wpasupplicant_debug_classified }}"
  vars:
    my_filename: "{{ lp_wpasupplicant_conf_file[item.type|default('default')] }}"
  tags: lp_wpasupplicant_conf

- name: "wpasupplicant: Debug: Configuration"
  debug:
    var: lp_wpasupplicant_conf_changes
  when: lp_wpasupplicant_debug_classified|bool
  tags: lp_wpasupplicant_conf

# Service
- name: "wpasupplicant: Manage wpa_supplicant services"
  service:
    name: "{{ my_service }}"
    state: "{{ item.state|default('started') }}"
    enabled: "{{ item.enabled|default(true) }}"
  register: lp_wpasupplicant_service_result
  loop: "{{ lp_wpasupplicant_conf }}"
  loop_control:
    label: "{{ my_service }}"
  vars:
    my_dev: "{{ item.dev }}"
    my_service: "{{ lp_wpasupplicant_service[item.type|default('default')] }}"
  tags: lp_wpasupplicant_service

- name: "wpasupplicant: Debug: Services"
  debug:
    var: lp_wpasupplicant_service_result
  when: lp_wpasupplicant_debug_classified|bool
  tags: lp_wpasupplicant_service

# EOF
...

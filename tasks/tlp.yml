---
# linux_postinstall tlp

- name: "tlp: Debug"
  vars:
    msg: |-
      lp_tlp_enable: {{ lp_tlp_enable }}
      lp_tlp_install: {{ lp_tlp_install }}
      lp_tlp_packages:
        {{ lp_tlp_packages|to_nice_yaml|indent(2) }}
      lp_tlp_thinkpad: {{ lp_tlp_thinkpad }}
      lp_tlp_packages_tp:
        {{ lp_tlp_packages_tp|to_nice_yaml|indent(2) }}
      lp_tlp_config_file: {{ lp_tlp_config_file }}
      lp_tlp_config:
        {{ lp_tlp_config|to_nice_yaml|indent(2) }}
      lp_tlp_services:
        {{ lp_tlp_services|to_nice_yaml|indent(2) }}
      lp_tlp_restart_service: {{ lp_tlp_restart_service }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_tlp_debug|bool
  tags: lp_tlp_debug

- name: "tlp: Install packages"
  ansible.builtin.include_tasks: fn/install-package.yml
  loop: "{{ lp_tlp_packages }}"
  when: lp_tlp_install|bool
  tags: lp_tlp_packages

- name: "tlp: Install packages for ThinkPad"
  ansible.builtin.include_tasks: fn/install-package.yml
  loop: "{{ lp_tlp_packages_tp }}"
  when: lp_tlp_thinkpad|bool
  tags: lp_tlp_packages

- name: "tlp: Configure {{ lp_tlp_config_file }}"
  ansible.builtin.lineinfile:
    dest: "{{ lp_tlp_config_file }}"
    regexp: '^\s*{{ item.key }}\s*=\s*(.*)$'
    line: "{{ item.key }}={{ item.value }}"
    create: true
    mode: "0644"
  loop: "{{ lp_tlp_config }}"
  notify: restart tlp
  tags: lp_tlp_conf

- name: "tlp: Start and enable tlp"
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ lp_tlp_services }}"
  when: lp_tlp_enable|bool
  tags: lp_tlp_service

- name: "tlp: Stop and disable tlp"
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ lp_tlp_services }}"
  when: not lp_tlp_enable|bool
  tags: lp_tlp_service

# EOF
...

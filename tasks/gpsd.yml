---
# linux_postinstall gpsd

- name: "Gpsd: Debug lp_gpsd_debug={{ lp_gpsd_debug }}"
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_gpsd_install: {{ lp_gpsd_install }}
      lp_gpsd_packages:
        {{ lp_gpsd_packages | to_nice_yaml(indent=2) | indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_gpsd_debug | bool
  tags: lp_gpsd_debug

- name: "Gpsd: Install packages for gpsd"
  ansible.builtin.import_role:
    name: vbotka.linux_lib
    tasks_from: install_package.yml
  when: lp_gpsd_install | bool
  vars:
    ll_ipkg_list: "{{ lp_gpsd_packages }}"
    ll_ipkg_state: "{{ lp_package_state }}"
    ll_ipkg_autoremove: "{{ lp_packages_autoremove | bool }}"
    ll_ipkg_rescue_end_host: "{{ lp_packages_rescue_end_host | bool }}"
    ll_debug: "{{ lp_gpsd_debug | bool }}"
  tags: lp_gpsd_packages

- name: "Gpsd: Add user gpsd to group dialout"
  ansible.builtin.user:
    name: gpsd
    groups: dialout
    append: true
  tags: lp_gpsd_group

- name: "Gpsd: Configure /etc/bluetooth/rfcomm.conf"
  ansible.builtin.blockinfile:
    dest: /etc/bluetooth/rfcomm.conf
    create: true
    marker: "# {mark} ANSIBLE MANAGED BLOCK rfcomm{{ item.rfcomm }}"
    insertafter: EOF
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
    block: |
      rfcomm{{ item.rfcomm }} {
        bind {{ item.bind }}
        device {{ item.device }}
        channel {{ item.channel }}
        comment "{{ item.comment }}"
        }
  loop: "{{ lp_gpsd_bt_rfcomm }}"
  notify: restart bluetooth
  tags: lp_gpsd_bt_rfcom

- name: "Gpsd: Configure /etc/default/gpsd"
  ansible.builtin.template:
    src: gpsd.j2
    dest: /etc/default/gpsd
    owner: root
    group: root
    mode: "0644"
    backup: "{{ lp_backup_conf }}"
  notify: restart gpsd
  tags: lp_gpsd_config

- name: "Gpsd: Service {{ state ~ ' and ' ~ enable }}"
  ansible.builtin.service:
    name: "{{ lp_gpsd_service }}"
    state: "{{ state }}"
    enabled: "{{ enabled }}"
  register: result
  vars:
    enabled: "{{ lp_gpsd_enable | bool | d(false) }}"
    state: "{{ lp_gpsd_state | d(default_state) }}"
    default_state: "{{ enabled | ternary('started', 'stopped') }}"
    enable: "{{ enabled | ternary('enabled', 'disabled') }}"
  tags: lp_gpsd_service

- name: "Gpsd: Debug service lp_gpsd_debug={{ lp_gpsd_debug }}"
  ansible.builtin.debug:
    var: result
  when: lp_gpsd_debug | bool
  tags: lp_gpsd_service

# EOF

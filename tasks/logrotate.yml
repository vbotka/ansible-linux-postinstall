---
# linux_postinstall logrotate

- name: "Logrotate: Debug lp_logrotate_debug={{ lp_logrotate_debug }}"
  when: lp_logrotate_debug | bool
  tags: lp_logrotate_debug
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_logrotate_install: {{ lp_logrotate_install }}
      lp_logrotate_packages:
        {{ lp_logrotate_packages | to_nice_yaml(indent=2) | indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: "Logrotate: Install packages for logrotate"
  when: lp_logrotate_install | bool
  tags: lp_logrotate_packages
  vars:
    ll_ipkg_list: "{{ lp_logrotate_packages }}"
    ll_ipkg_state: "{{ lp_package_state }}"
    ll_ipkg_autoremove: "{{ lp_packages_autoremove | bool }}"
    ll_ipkg_rescue_end_host: "{{ lp_packages_rescue_end_host | bool }}"
    ll_debug: "{{ lp_logrotate_debug | bool }}"
  ansible.builtin.import_role:
    name: vbotka.linux_lib
    tasks_from: install_package.yml

- name: "Logrotate: Configure blocks in {{ lp_logrotate_conf_file }}"
  tags: lp_logrotate_conf_blocks
  ansible.builtin.blockinfile:
    path: "{{ lp_logrotate_conf_file }}"
    mark: "{{ item.mark }}"
    block: "{{ item.block }}"
    state: "{{ item.state }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_logrotate_conf_blocks }}"

- name: "Logrotate: Configure lines in {{ lp_logrotate_conf_file }}"
  tags: lp_logrotate_conf_lines
  ansible.builtin.lineinfile:
    path: "{{ lp_logrotate_conf_file }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_logrotate_conf_lines }}"

- name: "Logrotate: Configure {{ lp_logrotate_conf_dir }}"
  tags: lp_logrotate_confd
  ansible.builtin.blockinfile:
    path: "{{ lp_logrotate_conf_dir }}/{{ item.path }}"
    block: "{{ item.conf }}"
    backup: "{{ lp_backup_conf }}"
    create: true
    owner: "{{ item.owner | d('root') }}"
    group: "{{ item.group | d('root') }}"
    mode: "{{ item.mode | d('0644') }}"
  loop: "{{ lp_logrotate_confd }}"
  loop_control:
    label: "{{ item.path }}"

# EOF

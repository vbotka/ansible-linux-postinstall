---
# linux_postinstall packages_auto

- name: "packages_auto: Init variable local_pkg_lists"
  ansible.builtin.set_fact:
    local_pkg_lists: []
    local_pkg_list: []
  tags: lp_packages_auto

- name: "packages_auto: List variables ^lp_.*_packages$"
  ansible.builtin.set_fact:
    local_pkg_lists: "{{ local_pkg_lists +
                     [{'install': item.split('_')[0] + '_' + item.split('_')[1],
                       'packages': item}] }}"
  loop: "{{ hostvars[inventory_hostname].keys()|
            select('match', '^lp_.*_packages$')|
            list }}"
  tags: lp_packages_auto

- name: "packages_auto: Debug local_pkg_lists"
  ansible.builtin.debug:
    msg: "[{{ lookup('vars', item.install, default='false')|bool }}]
              packages {{ lookup('vars', item.packages) }}"
  loop: "{{ local_pkg_lists }}"
  when: lp_packages_debug|bool
  tags: lp_packages_auto

- name: "packages_auto: Create local_pkg_list"
  ansible.builtin.set_fact:
    local_pkg_list: "{{ local_pkg_list + lookup('vars', item.packages) }}"
  loop: "{{ local_pkg_lists }}"
  when: lookup('vars', item.install, default='False')|bool
  tags: lp_packages_auto

- name: "packages_auto: Debug local_pkg_list"
  ansible.builtin.debug:
    var: local_pkg_list
  when: lp_packages_debug|bool
  tags: lp_packages_auto

- name: "packages_auto: Install packages"
  ansible.builtin.include_tasks: fn/install-package.yml
  loop: "{{ local_pkg_list }}"
  tags: lp_packages_auto

# EOF
...

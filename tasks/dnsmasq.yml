---
# linux_postinstall dnsmasq

- name: "Dnsmasq: Debug lp_dnsmasq_debug={{ lp_dnsmasq_debug }}"
  when: lp_dnsmasq_debug | bool
  tags: lp_dnsmasq_debug
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_dnsmasq_install: {{ lp_dnsmasq_install }}
      lp_dnsmasq_enable: {{ lp_dnsmasq_enable }}
      lp_dnsmasq_service: {{ lp_dnsmasq_service }}
      lp_dnsmasq_packages:
        {{ lp_dnsmasq_packages | to_nice_yaml(indent=2) | indent(2) }}
      lp_dnsmasq_config:
        {{ lp_dnsmasq_config | to_nice_yaml(indent=2) | indent(2) }}
      lp_dnsmasq_hosts:
        {{ lp_dnsmasq_hosts | to_yaml(indent=2) | indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"

- name: "Dnsmasq: Install packages"
  when: lp_dnsmasq_install | bool
  tags: lp_dnsmasq_packages
  vars:
    ll_ipkg_list: "{{ lp_dnsmasq_packages }}"
    ll_ipkg_state: "{{ lp_package_state }}"
    ll_ipkg_autoremove: "{{ lp_packages_autoremove | bool }}"
    ll_ipkg_rescue_end_host: "{{ lp_packages_rescue_end_host | bool }}"
    ll_debug: "{{ lp_dnsmasq_debug | bool }}"
  ansible.builtin.import_role:
    name: vbotka.linux_lib
    tasks_from: install_package.yml

- name: "Dnsmasq: Create directories"
  tags: lp_dnsmasq_directories
  ansible.builtin.file:
    state: directory
    path: "{{ item.dest | dirname }}"
    owner: "{{ item.downer | d('root') }}"
    group: "{{ item.dgroup | d('root') }}"
    mode: "{{ item.dmode | d('0755') }}"
  loop: "{{ lp_dnsmasq_config }}"
  loop_control:
    label: "{{ item.dest | dirname }}"

- name: "Dnsmasq: Configure"
  tags: lp_dnsmasq_config
  notify: restart dnsmasq
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | d('root') }}"
    group: "{{ item.group | d('root') }}"
    mode: "{{ item.mode | d('0600') }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_dnsmasq_config }}"
  loop_control:
    label: "{{ item.dest }}"

- name: Service
  tags: lp_dnsmasq_service
  block:

    - name: "Dnsmasq: Service {{ state ~ ' and ' ~ enable }}"
      register: result
      vars:
        enabled: "{{ lp_dnsmasq_enable | bool | d(false) }}"
        state: "{{ lp_dnsmasq_state | d(default_state) }}"
        default_state: "{{ enabled | ternary('started', 'stopped') }}"
        enable: "{{ enabled | ternary('enabled', 'disabled') }}"
      ansible.builtin.service:
        name: "{{ lp_dnsmasq_service }}"
        state: "{{ state }}"
        enabled: "{{ enabled }}"

    - name: "Dnsmasq: Debug service lp_dnsmasq_debug={{ lp_dnsmasq_debug }}"
      when: lp_dnsmasq_debug | bool
      ansible.builtin.debug:
        var: result

# EOF

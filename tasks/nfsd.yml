---
# linux_postinstall nfsd

- name: "nfsd: Install packages"
  ansible.builtin.include_tasks:
    file: fn/install-package.yml
    apply:
      tags: lp_nfsd_packages
  loop: "{{ lp_nfsd_packages }}"
  when: lp_nfsd_install|bool
  tags: lp_nfsd_packages

- name: "nfsd: Configure exports"
  ansible.builtin.template:
    src: exports.j2
    dest: /etc/exports
    owner: root
    group: root
    mode: '0644'
  notify: reload nfsd
  tags: lp_nfsd_exports

- name: "nfsd: Services start/stop and enable/disable"
  ansible.builtin.service:
    name: "{{ srv_name }}"
    state: "{{ srv_stat }}"
    enabled: "{{ srv_enbl }}"
  loop: "{{ lp_nfsd_services }}"
  loop_control:
    label: "{{ srv_name }} state: {{ srv_stat }} enabled: {{ srv_enbl }}"
  register: result
  vars:
    srv_name: "{{ lookup('vars', 'lp_' ~ item ~ '_service', default=item) }}"
    srv_enbl: "{{ lookup('vars', 'lp_' ~ item ~ '_enable', default=false) }}"
    srv_stat: "{{ lookup('vars', 'lp_' ~ item ~ '_state', default=default_stat) }}"
    default_stat: "{{ srv_enbl|bool|ternary('started', 'stopped') }}"
  tags: lp_nfsd_service

- name: "nfsd: Debug service"
  ansible.builtin.debug:
    var: result
  when: lp_nfsd_debug|bool
  tags: lp_nfsd_service

- name: "nfsd: Enable and start nfsd services"
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: true
    state: started
  loop: "{{ lp_nfsd_services }}"
  when:
    - lp_nfsd_enable|bool
    - lp_nfsd_services|length > 0
  tags: lp_nfsd_service

- name: "nfsd: Stop and disable nfsd services"
  ansible.builtin.service:
    name: "{{ item }}"
    enabled: false
    state: stopped
  loop: "{{ lp_nfsd_services }}"
  when:
    - not lp_nfsd_enable|bool
    - lp_nfsd_services|length > 0
  tags: lp_nfsd_service

# EOF
...

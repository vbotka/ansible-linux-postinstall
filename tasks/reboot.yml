---
# linux_postinstall reboot

- name: Reboot Debug
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_reboot_force: {{ lp_reboot_force }}
      lp_reboot_required_ignore: {{ lp_reboot_required_ignore }}
      lp_reboot_required_file: {{ lp_reboot_required_file }}
      lp_reboot_command: {{ lp_reboot_command }}
      lp_reboot_wait_connect_timeout: {{ lp_reboot_wait_connect_timeout }}
      lp_reboot_wait_sleep: {{ lp_reboot_wait_sleep }}
      lp_reboot_wait_delay: {{ lp_reboot_wait_delay }}
      lp_reboot_wait_timeout: {{ lp_reboot_wait_timeout }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_reboot_debug|bool
  tags: lp_reboot_debug

- name: "Reboot: Debian test {{ lp_reboot_required_file }}"
  when: ansible_os_family == 'Debian'

  block:
    - name: "Reboot: Stat {{ lp_reboot_required_file }}"
      ansible.builtin.stat:
        path: "{{ lp_reboot_required_file }}"
      register: reboot_required_file_status
    - name: "Reboot: Set reboot_required"
      ansible.builtin.set_fact:
        reboot_required: "{{ reboot_required_file_status.exists | default(false) }}"
- name: "Reboot: RedHat test {{ lp_reboot_required_command }}"
  when: ansible_os_family == 'RedHat'

  block:
    - name: "Reboot: Run {{ lp_reboot_required_command }}"
      ansible.builtin.command:
        cmd: >
          {{ lp_reboot_required_command }}
      register: reboot_required_cmd_status
    - name: "Reboot: Set reboot_required"
      ansible.builtin.set_fact:
        reboot_required: "{{ (reboot_required_cmd_status.rc != 0) | ternary(true, false) }}"
- name: "Reboot: Debug reboot_required"
  ansible.builtin.debug:
    var: reboot_required
  when: lp_reboot_debug|bool

- name: "Reboot: Reboot and wait for connection"
  ansible.builtin.reboot:
    connect_timeout: "{{ lp_reboot_wait_connect_timeout }}"
    post_reboot_delay: "{{ lp_reboot_wait_delay }}"
    reboot_timeout: "{{ lp_reboot_wait_timeout }}"
  when: (reboot_required|default(false) and (not lp_reboot_required_ignore)) or lp_reboot_force|bool

# - name: "reboot: Reboot and wait for connection"
#   block:
#     - name: "reboot: Reboot"  # noqa 305
#       shell: "{{ lp_reboot_command }}"
#       async: 1
#       poll: 0
#     - name: "reboot: Wait for connection"
#       wait_for_connection:
#         connect_timeout: "{{ lp_reboot_wait_connect_timeout }}"
#         sleep: "{{ lp_reboot_wait_sleep }}"
#         delay: "{{ lp_reboot_wait_delay }}"
#         timeout: "{{ lp_reboot_wait_timeout }}"
#   when: (reboot_required|default(false) and
#         (not lp_reboot_required_ignore)) or lp_reboot_force

# EOF

---
# linux_postinstall xen

- name: "Xen: Debug"
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_xen_packages:
        {{ lp_xen_packages | to_nice_yaml(indent=2) | indent(2) }}
      lp_xen_dom0_mem:
        {{ lp_xen_dom0_mem | to_nice_yaml(indent=2) | indent(2) }}
      lp_xen_default_grub_conf:
        {{ lp_xen_default_grub_conf | to_nice_yaml(indent=2) | indent(2) }}
      lp_xen_global:
        {{ lp_xen_global | to_nice_yaml(indent=2) | indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_xen_debug|bool
  tags: lp_xen_debug

- name: "Xen: Install packages"
  ansible.builtin.import_role:
    name: vbotka.linux_lib
    tasks_from: install_package.yml
  when: lp_xen_install|bool
  vars:
    ll_ipkg_list: "{{ lp_xen_packages }}"
    ll_ipkg_state: "{{ lp_package_state }}"
    ll_ipkg_autoremove: "{{ lp_packages_autoremove | bool }}"
    ll_ipkg_rescue_end_host: "{{ lp_packages_rescue_end_host | bool }}"
    ll_debug: "{{ lp_xen_debug | bool }}"
  tags: lp_xen_packages

- name: "Xen: Configure /etc/default/grub"
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: ^\s*{{ item.key }}\s*=\s*(.*)$
    line: "{{ item.key }}={{ item.value }}"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_xen_default_grub_conf }}"
  loop_control:
    label: "{{ item.key }}: {{ item.value }}"
  notify: update grub
  tags: lp_xen_default_grub

- name: "Xen: Configure /etc/xen/xl.conf"
  ansible.builtin.lineinfile:
    dest: /etc/xen/xl.conf
    regexp: ^\s*{{ item.var }}\s*=\s*(.*)$
    line: "{{ item.var }}={{ item.value }}"
    backup: "{{ lp_backup_conf }}"
    create: true
    mode: "0644"
  loop: "{{ lp_xen_global }}"
  loop_control:
    label: "{{ item.var }}: {{ item.value }}"
  tags: lp_xen_global

# EOF

---
# linux_postinstall zfs

- name: "zfs: Debug"
  vars:
    msg: |-
      lp_zfs_install: {{ lp_zfs_install }}
      lp_zfs_packages:
        {{ lp_zfs_packages|to_nice_yaml(indent=2)|indent(2) }}
      lp_zfs_services:
        {{ lp_zfs_services|default([])|to_yaml(indent=2)|indent(2) }}
      lp_zfs_manage:
        {{ lp_zfs_manage|to_yaml(indent=2)|indent(2) }}
      lp_zfs_mountpoints:
        {{ lp_zfs_mountpoints|to_yaml(indent=2)|indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_zfs_debug|bool
  tags: lp_zfs_debug

- name: "zfs: Install packages"
  ansible.builtin.include_tasks:
    file: fn/install-package.yml
    apply:
      tags: lp_zfs_packages
  loop: "{{ lp_zfs_packages }}"
  when: lp_zfs_install|bool
  tags: lp_zfs_packages

- name: "zfs: Manage zfs services"
  ansible.builtin.service:
    name: "{{ item.name }}"
    enabled: "{{ srv_enbl }}"
    state: "{{ srv_stat }}"
  loop: "{{ lp_zfs_services|default([]) }}"
  loop_control:
    label: "{{ item.name }} enabled: {{ srv_enbl }} state: {{ srv_stat }}"
  vars:
    srv_enbl: "{{ item.enabled|default(true) }}"
    srv_stat: "{{ item.state|default(default_stat) }}"
    default_stat: "{{ srv_enbl|bool|ternary('started', 'stopped') }}"
  tags: lp_zfs_services

- name: "zfs: Manage zfs"
  community.general.zfs:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    origin: "{{ item.origin|default(omit) }}"
    extra_zfs_properties: "{{ item.extra_zfs_properties|default(omit) }}"
  loop: "{{ lp_zfs_manage }}"
  loop_control:
    label: "{{ item.name }}"
  tags: lp_zfs_manage

- name: "zfs: Set mode and ownership of zfs mountpoints"
  ansible.builtin.file:
    state: directory
    path: "{{ item.mountpoint }}"
    owner: "{{ item.owner|default(omit) }}"
    group: "{{ item.group|default(omit) }}"
    mode: "{{ item.mode|default(omit) }}"
  loop: "{{ lp_zfs_mountpoints }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  tags: lp_zfs_mountpoints

# EOF
...

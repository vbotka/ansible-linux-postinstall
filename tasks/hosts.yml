---
# linux_postinstall hosts

- name: "hosts: Debug"
  vars:
    msg: |-
      ansible_os_family: {{ ansible_os_family }}
      lp_hosts_sanity: {{ lp_hosts_sanity }}
      lp_hosts_default_override:
        {{ lp_hosts_default_override|to_yaml(indent=2)|indent(2) }}
      lp_hosts_default:
        {{ lp_hosts_default|to_yaml(indent=2)|indent(2) }}
      lp_hosts_template: {{ lp_hosts_template }}
      lp_hosts:
        {{ lp_hosts|to_yaml(indent=2)|indent(2) }}
      lp_backup_conf: {{ lp_backup_conf }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_hosts_debug|bool
  tags: lp_hosts_debug

- name: "hosts: Sanity"
  block:

    - name: "hosts: Sanity valid IP"
      ansible.builtin.fail:
        msg: '[ERR] Invalid IP address'
      when: (lp_hosts|map(attribute='ip')|map('ansible.utils.ipaddr')) is not all

    - name: "hosts: Sanity unique FQDN"
      ansible.builtin.fail:
        msg: '[ERR] FQDN not unique'
      vars:
        no_records: "{{ lp_hosts|length }}"
        no_hosts: "{{ lp_hosts|map(attribute='fqdn')|list|unique|length }}"
      when: no_records != no_hosts

  when: lp_hosts_sanity|bool
  tags: lp_hosts_sanity

- name: "hosts: Configure hosts in /etc/hosts"
  ansible.builtin.template:
    src: "{{ lp_hosts_template }}"
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
    backup: "{{ lp_backup_conf }}"
  tags: lp_hosts_conf

# EOF
...

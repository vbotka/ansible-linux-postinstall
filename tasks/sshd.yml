---
# linux_postinstall sshd

- name: "sshd: Debug"
  vars:
    msg: |-
      lp_sshd_enable: {{ lp_sshd_enable }}
      lp_sshd_config_remove_duplicates: {{ lp_sshd_config_remove_duplicates }}
      lp_sshd_config:
        {{ lp_sshd_config|to_yaml|indent(2) }}
  ansible.builtin.debug:
    msg: "{{ '{}'.format(msg) }}"
  when: lp_sshd_debug|bool
  tags: lp_sshd_debug

- name: "sshd: Remove duplicate parameters from /etc/ssh/sshd_config"
  ansible.builtin.replace:
    dest: /etc/ssh/sshd_config
    after: '^\s*{{ item.key }}(?!\S)'
    regexp: '^\s*{{ item.key }}(?!\S).*$'
    backup: "{{ lp_backup_conf }}"
    validate: "{{ lp_sshd_path }} -t -f %s"
  loop: "{{ lp_sshd_config }}"
  loop_control:
    label: "{{ item.key }}"
  notify: reload sshd
  when: lp_sshd_config_remove_duplicates|bool
  tags: lp_sshd_config

- name: "sshd: Configure /etc/ssh/sshd_config"
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^\s*{{ item.key }}(?!\S).*$'
    line: "{{ item.key }} {{ item.value }}"
    backup: "{{ lp_backup_conf }}"
    validate: "{{ lp_sshd_path }} -t -f %s"
  loop: "{{ lp_sshd_config }}"
  notify: reload sshd
  tags: lp_sshd_config

- name: "sshd: Enable and start sshd"
  ansible.builtin.service:
    name: "{{ lp_sshd_service }}"
    enabled: true
    state: started
  when: lp_sshd_enable|bool
  tags: lp_sshd_service

- name: "sshd: Disable and stop sshd"
  ansible.builtin.service:
    name: "{{ lp_sshd_service }}"
    enabled: false
    state: stopped
  when: not lp_sshd_enable|bool
  tags: lp_sshd_service

# EOF
...
